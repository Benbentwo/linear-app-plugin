fragment PageInfoIssueConnection on IssueConnection {
    pageInfo {
        hasNextPage
        endCursor
    }
}

fragment ShortIssueConnection on IssueConnection {
    nodes {
        id
        identifier
        title
        description
        createdAt
        url
        updatedAt
        state {
            type
        }
        labels {
            nodes {
                name
            }
        }
        comments {
            nodes {
                body,
                user {
                    name
                },
                createdAt
            }
        }
    }
    ...PageInfoIssueConnection
}

query Issues($teamId: String!, $count: Int!, $endCursor: String){
    team(id: $teamId) {
        id
        name

        issues(first: $count, after: $endCursor, orderBy: updatedAt) {
            ...ShortIssueConnection
        }
    }
}

query SearchIssues($query:String!, $teamId: String!, $count: Int!, $endCursor: String){
    issueSearch(
        first: $count,
        after: $endCursor,
        orderBy: updatedAt,
        query: $query,
        filter: {
            team: {
                key: {
                    eq: $teamId
                }
            }
        }
    ) {
        ...ShortIssueConnection
    }
}

query GetPageInfo($teamId: String!, $offset: Int!, $endCursor: String) {
    team(id: $teamId) {
        issues(first: $offset, after: $endCursor, orderBy: updatedAt) {
            ...PageInfoIssueConnection
        }
    }
}

query GetSearchIssuesPageInfo($query:String!, $teamId: String!, $offset: Int!, $endCursor: String) {
    issueSearch(
        first: $offset,
        after: $endCursor,
        orderBy: updatedAt,
        query: $query,
        filter: {
            team: {
                key: {
                    eq: $teamId
                }
            }
        }
    ) {
        ...PageInfoIssueConnection
    }
}

query GetIssueStates($issueId: String!) {
    issue(id: $issueId) {
        team {
            states {
                nodes {
                    id
                    name
                    type
                    position
                }
            }
        }
    }
}

mutation UpdateIssueState($issueId: String!, $stateId: String!){
    issueUpdate(
        id: $issueId,
        input: {
            stateId: $stateId
        }
    ) {
        success
    }
}
